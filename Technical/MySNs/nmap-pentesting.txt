Network Scanning Workshop

Questions/Comments: jonschipp@gmail.com

Student Worksheet:

===========
==Part 1.== ( Sockets )
===========

netcat - Client and Server Interaction:

# create listening sockets (server)

1.1 nc -l -p 55555 (listen on all interfaces)
1.2 nc -l -p 55555 -s 127.0.0.1 (listen on localhost)
1.3 nc -l -p 55555 -s 192.168.1.16 (listen on ip address)

# observe sockets

netstat -an -A inet -p | grep LISTEN
netstat -l -A inet -p

# connect to listening sockets (client)

1.4 nc 192.168.1.16 55555

# shovel a shell (simple backdoor)

1.5 nc -l -p 55555 -s 192.168.1.16 -e /bin/bash

# transfer a file

1.6 nc -l -p 55555 -s 192.168.1.16 < snoopdogg.mp3
1.7 nc 192.168.1.16 55555 > snoopdogg.mp3

# port scanning

1.8  nc -n -z -v 192.168.1.8 1-1000

# HTTP banner grabbing

1.9 echo -e "HEAD / HTTP/1.0\r\n" | nc -v -w1 itt-tech.edu 80 2>/dev/null | grep -i server

===========
==Part 2.== ( Route Mapping )
===========

traceroute - follow the path a datagram takes to its destination

Windows traceroute sends ICMP datagrams
Unix traceroute sends UDP datagrams

# no name resolution, quicker

2.1 traceroute -n google.com

# tcptraceroute - a TCP traceroute implementation

2.2 tcptraceroute -S -n google.com 80

# send ACK's, map stateful firewalls

2.3 tcptraceroute -A -n google.com

# send a SYN to port 80

2.4 hping2 --traceroute -S -p 80 itt-tech.edu

# ICMP Echo

2.4 nmap -sn -PN --traceroute itt-tech.edu

# TCP traceroute port 443

2.5 nmap -n -PN -sS -p 443 --traceroute google.com

# ping - record route

2.7 ping -R 192.168.3.80

===========
==Part 3.== ( Network Scanning )
===========

Nmap - Host Discovery:

*nmap does a port scan by default - turn it off with -sn (host discovery only i.e. no port scan)*

# ARP scan - local network only *nmap defaults to ARP scan if the targets are on the same local network*
*use --send-ip for workshop to disable ARP scan*

3.1 nmap -sn -n -PR 192.168.1.0/24

# Ping scan - watch packets

3.2 nmap -sn -n --packet-trace 192.168.2.2

# Ping - ICMP Echo

3.3 nmap -sn -PE -n --packet-trace 192.168.1.1

# TCP ACK/SYN probes

3.4 nmap -sn -n -PS80,443,53 -PA80,443,53 -n --packet-trace --reason -v 192.168.1.1

# more probes

3.5 nmap -n -sn -PE -PP -PS25,53,80,443 -PA25,53,80,443 --source-port 53 -T4 192.168.1.0/24 192.168.2.0/24 192.168.5.0/24

-------------------------

Nmap - Port Scanning:

*for port scans nmap always sends a TCP ACK to port 80 and a ICMP Echo first for host discovery*

# fast scan (common 100 ports), no name resolution, no host discovery

3.6 nmap -F -n -PN 192.168.1.5

# TCP scan (unprivileged mode)

3.7 nmap -sT -n -PN -p 1-1024,8000,8080 192.168.2.1
 
# SYN stealth scan, scan top 300 ports (most common)

3.8 nmap -sS -n --top-ports 300 --reason 192.168.1.1-5

#  Look for Windows Machines

3.9 nmap -n -PN -sSU -p U:137,138,139,T:135,139,445,1433,3389 --reason 192.168.1.0/24 192.168.2.1-100

# Probe for DNS servers

3.10 nmap -n -PN -sSU -p U:53,T:53 --reason --packet-trace 8.8.8.8

# in a hurry? scan all ports

3.11 nmap -sSU -n -PN -p- --min-rate 1000 --max-retries 0 192.168.1.8,20,1

# map stateful/stateless firewall rules, send ACK's

3.12 nmap -sA -n -v -p1-100,400-500 192.168.254.254

--------------------------

Service/OS Detection & Other Options:

*default version intensity: -sV is 7*

# light OS & Service scan, fast timing

3.13 nmap -sV -F -n -PN --version-light -T4 --reason -O --osscan-limit -oN scan.txt 192.168.1.1-5

# Verbose mode, Aggressive options: -O, -sV, -sC, --traceroute

3.14 nmap -n -PN -A -vv --reason -T4 -oN scan.txt 192.168.1-2.1-5

# Get a second opinion with xprobe2

3.15 xprobe2 -v 192.168.1.2

3.16 xprobe2 -v -A -U 111 -T 80,443,3000 192.168.1.2

-------------------------------
 
Script Scans:

3.15 nmap --script smb-enum-shares.nse -n -PN -p445 192.168.1.2
3.16 nmap --script smb-os-discovery -n -PN -p445 192.168.5.2
3.17 nmap --script http-headers -n -PN -p80,443 192.168.1.8
3.18 nmap --script vuln,malware -n -T4 192.168.1.5
3.19 nmap --script snmp* -n -PN -sU -p 161 192.168.1.5

IDS Evasion:

# IDS Evasion for NFS, example of different options

3.20 nmap --spoof-mac Apple --traceroute -T1 --data-length 9 \
-f -D 192.168.1.2,ME,RND:5 -v -n -O -sV \
-oA ~/scan.txt --log-errors \
-p T:111,1110,2049,4045,U:111,1110,2049,4045 --randomize-hosts 192.168.1.1-10

===========
==Part 4.==  (Packet Crafting)
===========

Hping:

# send an SYN

4.0 hping2 -p 443 -S -c 1 192.168.2.2

# flag the FIN, PSH, and URG bits (Xmas scan)

4.1 hping2 -p 53 -FPU -c 1 192.168.1.1

# send an ICMP Echo

4.2 hping2 -V -c 1 --icmptype 8 --icmpcode 0 192.168.1.1

# send ICMP Address Mask Request:

4.3 hping2 -V -c 1 --icmp-addr 192.168.1.255

# scanning ports with hping2

4.4 hping2 -V --scan 1-1000 -S 192.168.1.8

# add debug, send a 'hide ping': no TCP flags, dst port 0, win size of 64

4.5 hping2 -V -D -c 1 192.168.1.5

# send fragmented SYN, send 40 bytes of data

4.6 hping2 -n -S -p 80 -c 1 -f 10 -E message.txt -d 40 192.168.2.2

===========
==Part 5.==
===========

DNS & Whois Queries:

dig - DNS lookup utility

5.0 dig google.com

# reverse name resolution

5.1 dig -x 98.137.149.56

# provide short version of output, the answer only

5.2 dig google.com +short

# trace the path of dns query

5.3 dig @8.8.8.8 yahoo.com +trace

5.4 dig @8.8.8.8 itt-tech.edu NS

5.5 dig @8.8.8.8 itt-tech.edu MX

# get, SOA zone info: notice order, +nocmd first

5.6 dig +nocmd google.com +multiline +noall +answer any

# zone transfer - TCP Port 53

5.7 dig +nocmd itt-tech.edu AXFR (could use +short instead)    

# script - dreamhost.com reverse resolution recon .1-255

5.8 for ip in $(seq 1 255); do echo -n "$ip -";dig -x 208.40.235.$ip +short; done

# reverse lookup sweep with nmap

5.9 nmap -sL 192.168.1.0/24

whois

5.10 whois itt-tech.edu

# get netblock info

5.11 whois 208.40.235.38

# have nmap do the whois for us, get netblock

5.12 nmap insightbb.com --script whois -sn -n -PN


http://www.tecmint.com/nmap-command-examples/

less /etc/services

less /usr/share/nmap/nmap-services

sudo netstat -plunt

scanme.nmap.org




11. Scan a Host to Detect Firewall
      nmap -sA 192.168.0.101

12. Scan a Host to check its protected by Firewall
      nmap -PN 192.168.0.101



REF:
http://www.tecmint.com/nmap-command-examples/
http://www.linuxsecurity.com/content/view/117695/49/
http://www.concise-courses.com/security/nmap-tutorial-and-help/
*** very nice ***
http://www.concise-courses.com/security/
https://www.digitalocean.com/community/tutorials/how-to-use-nmap-to-scan-for-open-ports-on-your-vps
